// ---------------------------------------------------------------- //
// This file is autogenerated by pioasm version 2.2.0; do not edit! //
// ---------------------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------------------ //
// pwm_one_bit_dither //
// ------------------ //

#define pwm_one_bit_dither_wrap_target 1
#define pwm_one_bit_dither_wrap 9
#define pwm_one_bit_dither_pio_version 1

#define pwm_one_bit_dither_offset_entry_point 7u

static const uint16_t pwm_one_bit_dither_program_instructions[] = {
    0xa242, //  0: nop                           [2]
            //     .wrap_target
    0x6001, //  1: out    pins, 1
    0xb826, //  2: mov    x, isr          side 1
    0x0043, //  3: jmp    x--, 3
    0xb022, //  4: mov    x, y            side 0
    0x0045, //  5: jmp    x--, 5
    0x00e0, //  6: jmp    !osre, 0
    0x80a0, //  7: pull   block
    0x60c7, //  8: out    isr, 7
    0x6047, //  9: out    y, 7
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program pwm_one_bit_dither_program = {
    .instructions = pwm_one_bit_dither_program_instructions,
    .length = 10,
    .origin = -1,
    .pio_version = pwm_one_bit_dither_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config pwm_one_bit_dither_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + pwm_one_bit_dither_wrap_target, offset + pwm_one_bit_dither_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}
#endif

// ------------------ //
// pwm_two_bit_dither //
// ------------------ //

#define pwm_two_bit_dither_wrap_target 1
#define pwm_two_bit_dither_wrap 11
#define pwm_two_bit_dither_pio_version 1

static const uint16_t pwm_two_bit_dither_program_instructions[] = {
    0xa242, //  0: nop                           [2]
            //     .wrap_target
    0x6001, //  1: out    pins, 1
    0x6001, //  2: out    pins, 1
    0x6001, //  3: out    pins, 1
    0xb826, //  4: mov    x, isr          side 1
    0x0045, //  5: jmp    x--, 5
    0xb022, //  6: mov    x, y            side 0
    0x0047, //  7: jmp    x--, 7
    0x00e0, //  8: jmp    !osre, 0
    0x80a0, //  9: pull   block
    0x60c7, // 10: out    isr, 7
    0x6047, // 11: out    y, 7
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program pwm_two_bit_dither_program = {
    .instructions = pwm_two_bit_dither_program_instructions,
    .length = 12,
    .origin = -1,
    .pio_version = pwm_two_bit_dither_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config pwm_two_bit_dither_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + pwm_two_bit_dither_wrap_target, offset + pwm_two_bit_dither_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}
#endif

